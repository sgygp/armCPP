/*
 * CanF3.cpp
 *
 *  Created on: 2021年4月8日
 *      Author: Administrator
 */
//	  HSE (8 MHz) -------> PLL倍频 (9 倍 = 72 MHz) ---------> APB1分频 (1/2 倍 = 36MHz) ------> can工作时钟 = 36 MHz
#include "CanF3.h"
u16 CanF3::zhi; //
u8 CanF3::sta; //

CanF3::CanF3() {
	// TODO 自动生成的构造函数存根

}

CanF3::~CanF3() {
	// TODO 自动生成的析构函数存根
}
void CanF3::init() {

	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE);

	GPIO_InitTypeDef GPIO_InitStructure;
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	NVIC_InitTypeDef NVIC_InitStructure;
	NVIC_InitStructure.NVIC_IRQChannel = USB_LP_CAN1_RX0_IRQn; //CAN1_RX1_IRQn;
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);

	CAN_InitTypeDef CAN_InitStructure;
	CAN_DeInit(CAN1);
	CAN_StructInit(&CAN_InitStructure);
	CAN_InitStructure.CAN_TTCM = DISABLE; //关闭时间触发模式
	CAN_InitStructure.CAN_ABOM = DISABLE; //关闭自动离线管理
	CAN_InitStructure.CAN_AWUM = DISABLE; //关闭自动唤醒
	CAN_InitStructure.CAN_NART = ENABLE; //关闭报文自动重传
	CAN_InitStructure.CAN_RFLM = DISABLE; //缓冲区溢出时自动覆盖原内容
	CAN_InitStructure.CAN_TXFP = DISABLE;	//报文发送优先级取决于ID号
	CAN_InitStructure.CAN_Mode = CAN_Mode_Normal; //正常工作模式

	CAN_InitStructure.CAN_SJW = CAN_SJW_1tq;
	CAN_InitStructure.CAN_BS1 = CAN_BS1_3tq;
	CAN_InitStructure.CAN_BS2 = CAN_BS2_2tq;
	CAN_InitStructure.CAN_Prescaler = 24; //60为100K;24为250K
//专用词汇名称在这里就不多讲解了，现在给出个公式： 8 (晶振) x 9 (PLL倍频) / 2 (APB1分频) / 60 / (1 + 3 + 2) = 0.1 = 100 (K)
//得到can的通信波特率 100 K；
	CAN_Init(CAN1, &CAN_InitStructure);

	/*不启用过滤器
	 CAN_FilterInitTypeDef CAN_FilerStructure;
	 CAN_FilerStructure.CAN_FilterNumber = 0;
	 CAN_FilerStructure.CAN_FilterMode = CAN_FilterMode_IdMask; //屏蔽模式，另外还有列表模式
	 CAN_FilerStructure.CAN_FilterScale = CAN_FilterScale_32bit;
	 CAN_FilerStructure.CAN_FilterIdHigh = 0; //标识符寄存器18FFDF00
	 CAN_FilerStructure.CAN_FilterIdLow = 0;
	 CAN_FilerStructure.CAN_FilterMaskIdHigh = 0; //屏蔽滤波寄存器 0代表不关心，1代表关心
	 CAN_FilerStructure.CAN_FilterMaskIdLow = 0;
	 CAN_FilerStructure.CAN_FilterFIFOAssignment = CAN_FilterFIFO0; //过滤器0关联到FIFO0
	 CAN_FilerStructure.CAN_FilterActivation = ENABLE; //使能过滤器

	 CAN_FilterInit(&CAN_FilerStructure);
	 */

	//使能接收中断
	CAN_ITConfig(CAN1, CAN_IT_FMP0, ENABLE); // FIFO 0 RxMessage pending Interrupt

}

void CanF3::tx() {
	CanTxMsg TxMessage;

	TxMessage.StdId = 0X200 >> 5;  //标准帧ID=0XFFE
//	TxMessage.ExtId = 0X18FEDF00;  //扩展帧ID
	TxMessage.IDE = CAN_ID_STD;  //标准帧还是扩展帧
	TxMessage.RTR = CAN_RTR_DATA;  //数据帧还是远程帧（遥控帧）
	TxMessage.DLC = 1;  //发送多少个字节
	TxMessage.Data[0] = 0x55;
	CAN_Transmit(CAN1, &TxMessage);

}

u8 m_canData[8];
extern "C" void USB_LP_CAN1_RX0_IRQHandler(void) {
	if (CAN_GetITStatus(CAN1, CAN_IT_FMP0) == SET) {
		CanRxMsg RxMessage;
		CAN_Receive(CAN1, CAN_FIFO0, &RxMessage);
		CAN_FIFORelease(CAN1, CAN_FIFO0);
		u16 uu = RxMessage.Data[0];
		uu <<= 8;
		CanF3::zhi = uu | RxMessage.Data[1];
		CanF3::sta = RxMessage.Data[2];
	}

}

